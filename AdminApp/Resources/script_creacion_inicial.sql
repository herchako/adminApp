USE KOTDESA
GO

/****** Object:  Table [KOTINFO].[CLIENTES]    Script Date: 26/12/2017 12:04:31 p. m. ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
--CREATE SCHEMA KOTINFO

CREATE TABLE [CLIENTES](
	[ID_CLIENTE] NUMERIC(18,0) IDENTITY PRIMARY KEY,
	[COD_CLIENTE] [numeric](18, 0) NULL,
    [ID_TIPO_CLIENTE] [numeric](18, 0) NULL,
	[NOMBRE] [nvarchar](255) NULL,
	[APELLIDO] [nvarchar](255) NULL,
	[EMAIL][nvarchar](255) NULL,
	[TELEFONO] [nvarchar](255) NULL,
	[CELULAR] [nvarchar](255) NULL,
	[OTRO_TEL] [nvarchar](255) NULL,
	[DNI] [nvarchar](255) NULL,
	[ID_TIPO_CUIL_CUIT] [numeric](18, 0) NULL,
	[FECHA_NACIMIENTO] [nvarchar](255) NULL,
	[DOMICILIO_CALLE] [nvarchar](255) NULL,
	[DOMICILIO_ALTURA] [nvarchar](255) NULL,
	[DOMICILIO_PISO] [nvarchar](255) NULL,
	[DOMICILIO_DPTO] [nvarchar](255) NULL,
	[DOMICILIO_PROVINCIA] [nvarchar](255) NULL,
	[DOMICILIO_PARTIDO] [nvarchar](255) NULL,
	[DOMICILIO_LOCALIDAD] [nvarchar](255) NULL,
	[OBSERVACIONES] [nvarchar](max) NULL,
	[ULTIMA_MODIFICACION] DATETIME2(3),
	[MODIFICADO_POR] [numeric](18, 0) NULL
	)
GO

Create TABLE [PENDIENTES](
	[ID_PENDIENTE] NUMERIC(18,0) IDENTITY PRIMARY KEY,
	[COD_PENDIENTE] NUMERIC(18,0) UNIQUE,
	[ID_CLIENTE] [numeric](18, 0) NULL,
	[CONCEPTO] [nvarchar](255) NULL,
	[PERIODO] [nvarchar](255) NULL,
	[FECHA] [nvarchar](255) NULL,
	[DIRECCION][nvarchar](255) NULL,
	[IMPORTE] [numeric](18, 2) NULL,
	[PAGADO]  BIT DEFAULT 0,
	[OBSERVACIONES] [nvarchar](255) NULL,
	[ULTIMA_MODIFICACION] DATETIME2(3),
	[MODIFICADO_POR] [numeric](18, 0) NULL 
	)
GO

CREATE TABLE [INMUEBLES](
	[ID_INMUEBLE] NUMERIC(18,0) IDENTITY PRIMARY KEY,
	[TIPO][nvarchar](255) NULL,
	[CALLE] [nvarchar](255) NULL,
	[ALTURA] [nvarchar](255) NULL,
	[PISO] [nvarchar](255) NULL,
	[DPTO] [nvarchar](255) NULL,
	[LOCALIDAD] [nvarchar](255) NULL,
	[NRO_PARTIDA] [nvarchar](255) NULL,
	[OBSERVACIONES] [nvarchar](255) NULL,
	[CODIGO_POSTAL] [nvarchar](255) NULL,
	[ADMINISTRACION_NOMBRE] [nvarchar](255) NULL,
	[ADMINISTRACION_TELEFONO] [nvarchar](255) NULL,
	[ADMINISTRACION_OBS] [nvarchar](255) NULL,
	[ENCARGADO_NOMBRE] [nvarchar](255) NULL,
	[ENCARGADO_TELEFONO] [nvarchar](255) NULL,
	[ENCARGADO_OBS] [nvarchar](255) NULL,
	[ULTIMA_MODIFICACION] DATETIME2(3),
	[MODIFICADO_POR] [numeric](18, 0) NULL
	)
GO

CREATE TABLE [PROPIETARIO_POR_INMUEBLE](
	[ID_PROPIETARIO_POR_INMUEBLE] NUMERIC(18,0) IDENTITY PRIMARY KEY,
	[ID_PROPIETARIO] NUMERIC(18,0) NULL,
	[ID_INMUEBLE] NUMERIC(18,0) NULL,
	[ULTIMA_MODIFICACION] DATETIME2(3),
	[MODIFICADO_POR] [numeric](18, 0) NULL
	)
GO

CREATE TABLE [TIPO_CLIENTES] (
	[ID_TIPO_CLIENTE] NUMERIC(18,0) IDENTITY PRIMARY KEY,
    [DESCRIPCION] [nvarchar](255) NULL,
	[ULTIMA_MODIFICACION] DATETIME2(3),
	[MODIFICADO_POR] [numeric](18, 0) NULL
	 
	)
GO

CREATE TABLE [TIPO_CUIL_CUIT] (
	[ID_TIPO_CUIL_CUIT] NUMERIC(18,0) IDENTITY PRIMARY KEY,
    [DESCRIPCION] [nvarchar](255) NULL,
	[ULTIMA_MODIFICACION] DATETIME2(3),
	[MODIFICADO_POR] [numeric](18, 0) NULL
	)
GO

CREATE TABLE [USUARIOS] (
	[ID_USUARIO] NUMERIC(18,0) IDENTITY PRIMARY KEY,
    [NOMBRE] [nvarchar](255) NULL,
	[CONTRASEÑA] [nvarchar](255) NULL,
	[ULTIMA_MODIFICACION] DATETIME2(3),
	)
GO

/*CREACION DE STORE PROCEDURES*/
/*CREACION DE STORE PROCEDURES*/
/*CREACION DE STORE PROCEDURES*/
/*CREACION DE STORE PROCEDURES*/
/*CREACION DE STORE PROCEDURES*/

create PROCEDURE [SP_INSERTAR_CLIENTE]
		@nombre NVARCHAR(255) = null,
		@apellido NVARCHAR(255) = null,
		@email NVARCHAR(255) = null,
		@telefono NVARCHAR(255) = null,
		@celular NVARCHAR(255) = null,
		@otro_tel NVARCHAR(255) = null,
		@id_tipo_cliente NUMERIC(18,0) = 1,
		@id_tipo_cuil_cuit NUMERIC(18,0) = 1,
		@dni NVARCHAR(255) NULL,
		@fecha_nacimiento NVARCHAR(255) = null,
		@domicilio_calle NVARCHAR(255) = null,
		@domicilio_altura NVARCHAR(255) = null,
		@domicilio_piso NVARCHAR(255) = null,
		@domicilio_dpto NVARCHAR(255) = null,
		@domicilio_provincia NVARCHAR(255) = null,
		@domicilio_partido NVARCHAR(255) = null,
		@domicilio_localidad NVARCHAR(255) = null,
		@observaciones NVARCHAR(255) = null,
		@modificado_por NUMERIC(18,0) =-1
		AS
		BEGIN
		SET NOCOUNT ON;
		DECLARE	@cod_cliente numeric(18,0)
		SET @cod_cliente= (SELECT COUNT(*) FROM dbo.CLIENTES)
		INSERT INTO dbo.CLIENTES(COD_CLIENTE, NOMBRE, APELLIDO, EMAIL, TELEFONO, CELULAR, OTRO_TEL, ID_TIPO_CLIENTE, ID_TIPO_CUIL_CUIT, DNI, FECHA_NACIMIENTO, DOMICILIO_CALLE,DOMICILIO_ALTURA,DOMICILIO_PISO,DOMICILIO_DPTO,DOMICILIO_PROVINCIA,DOMICILIO_PARTIDO,DOMICILIO_LOCALIDAD,OBSERVACIONES,MODIFICADO_POR)
		VALUES(@cod_cliente,@nombre,@apellido, @email,@telefono,@celular,@otro_tel, @id_tipo_cliente, @id_tipo_cuil_cuit,@dni,@fecha_nacimiento,@domicilio_calle,@domicilio_altura,@domicilio_piso,@domicilio_dpto,@domicilio_provincia,@domicilio_partido,@domicilio_localidad, @observaciones, @modificado_por   )
		END
GO

CREATE PROCEDURE [SP_INSERTAR_INMUEBLE]
		@id_cliente_1 NUMERIC(18,0) =1,
		@id_cliente_2 NUMERIC(18,0) =-1,
		@tipo NVARCHAR(255) = null,
		@calle NVARCHAR(255) = null,
		@altura NVARCHAR(255) = null,
		@piso NVARCHAR(255) = null,
		@dpto NVARCHAR(255) = null,
		@localidad NVARCHAR(255) = null,
		@observaciones NVARCHAR(255) = null,
		@nro_partida NVARCHAR(255) = null,
		@codigo_postal NVARCHAR(255) = null,
		@administracion_nombre NVARCHAR(255) = null,
		@administracion_telefono NVARCHAR(255) = null,
		@administracion_obs NVARCHAR(255) = null,
		@encargado_nombre NVARCHAR(255) = null,
		@encargado_telefono NVARCHAR(255) = null,
		@encargado_obs NVARCHAR(255) = null,
		@modificado_por NUMERIC(18,0) =-1
		AS
		BEGIN
		SET NOCOUNT ON;
		DECLARE	@id_inmueble numeric(18,0)
		INSERT INTO dbo.INMUEBLES(TIPO, CALLE, ALTURA, PISO, DPTO, LOCALIDAD, OBSERVACIONES, NRO_PARTIDA, CODIGO_POSTAL, ADMINISTRACION_NOMBRE, ADMINISTRACION_TELEFONO, ADMINISTRACION_OBS, ENCARGADO_NOMBRE, ENCARGADO_TELEFONO, ENCARGADO_OBS, MODIFICADO_POR)
		VALUES(@tipo, @calle, @altura, @piso, @dpto, @localidad, @observaciones, @nro_partida, @codigo_postal, @administracion_nombre, @administracion_telefono, @administracion_obs, @encargado_nombre, @encargado_telefono, @encargado_obs, @modificado_por)
		SET @id_inmueble = SCOPE_IDENTITY();
		INSERT INTO dbo.PROPIETARIO_POR_INMUEBLE(ID_INMUEBLE,ID_PROPIETARIO, MODIFICADO_POR)
		VALUES (@id_inmueble,@id_cliente_1, @modificado_por)
		IF @id_cliente_2 != -1
        INSERT INTO dbo.PROPIETARIO_POR_INMUEBLE(ID_INMUEBLE,ID_PROPIETARIO, MODIFICADO_POR)
		VALUES (@id_inmueble,@id_cliente_2, @modificado_por)
		
		END
GO

CREATE PROCEDURE [SP_INSERTAR_PENDIENTE]
	@id_cliente NUMERIC(18,0),
	@concepto NVARCHAR(255) = null,
	@periodo NVARCHAR(255) = null,
	@fecha NVARCHAR(255) = null,
	@direccion NVARCHAR(255) = null,
	@importe [numeric](18, 2) = null,
	@pagado BIT,
	@observaciones NVARCHAR(255) = null,
	@modificado_por NUMERIC(18,0) =-1
		AS
		BEGIN
		SET NOCOUNT ON;
		DECLARE	@cod_pendiente numeric(18,0)
		SET @cod_pendiente= (SELECT COUNT(*) FROM dbo.PENDIENTES)
		INSERT INTO dbo.PENDIENTES(ID_CLIENTE, COD_PENDIENTE, CONCEPTO, PERIODO, FECHA, DIRECCION, IMPORTE, PAGADO, OBSERVACIONES, MODIFICADO_POR)
		VALUES(@id_cliente, @cod_pendiente, @concepto, @periodo, @fecha, @direccion, @importe, @pagado, @observaciones, @modificado_por)
		END
GO

CREATE PROCEDURE [SP_INSERTAR_USUARIO]
	@nombre NVARCHAR(255),
	@contrasena NVARCHAR(255)
		AS
		BEGIN
		SET NOCOUNT ON;
		INSERT INTO dbo.USUARIOS(NOMBRE, CONTRASEÑA)
		VALUES(@nombre, @contrasena)
		END
GO

CREATE PROCEDURE [SP_TRAER_TIPO_CLIENTES]
		AS
		BEGIN
		SET NOCOUNT ON;
		SELECT * FROM DBO.TIPO_CLIENTES
		END
GO

CREATE PROCEDURE [SP_TRAER_TIPO_CUIL_CUIT]
		AS
		BEGIN
		SET NOCOUNT ON;
		SELECT * FROM DBO.TIPO_CUIL_CUIT
		END
GO

CREATE PROCEDURE [SP_TRAER_PROVINCIAS]
		AS
		BEGIN
		SET NOCOUNT ON;
		SELECT ID_PROVINCIA,NOMBRE FROM DBO.PROVINCIAS
		ORDER BY NOMBRE ASC
		END
GO

CREATE PROCEDURE [SP_TRAER_DEPARTAMENTOS_POR_PROVINCIA]
	@id_provincia NUMERIC(18,0)
	AS
		BEGIN
		SET NOCOUNT ON;
		SELECT ID_DEPARTAMENTO,NOMBRE FROM DBO.DEPARTAMENTOS 
		WHERE ID_PROVINCIA = @id_provincia 
		ORDER BY PESO ASC,NOMBRE ASC
	END
GO

CREATE PROCEDURE [SP_TRAER_LOCALIDAD_POR_DEPARTAMENTO]
	@id_departamento NUMERIC(18,0)
	AS
	BEGIN
		SET NOCOUNT ON;
		SELECT ID_LOCALIDAD,NOMBRE FROM DBO.LOCALIDADES
		WHERE ID_DEPARTAMENTO = @id_departamento 
		ORDER BY PESO ASC,NOMBRE ASC
	END
GO

CREATE PROCEDURE [SP_TRAER_CLIENTES]
	AS
		BEGIN
		SELECT ID_CLIENTE, APELLIDO FROM DBO.CLIENTES ORDER BY APELLIDO ASC
		END
GO

CREATE PROCEDURE [SP_TRAER_CLIENTES_APELLIDO_Y_NOMBRE]
	AS
		BEGIN
		SELECT ID_CLIENTE, (''+APELLIDO+', '+NOMBRE) AS APELLIDO FROM DBO.CLIENTES ORDER BY APELLIDO ASC
		END
GO

create PROCEDURE [SP_TRAER_CLIENTES_CODIGO_APELLIDO_Y_NOMBRE]
	AS
		BEGIN
		SELECT ID_CLIENTE, COD_CLIENTE AS CODIGO, (''+APELLIDO+', '+NOMBRE) AS APELLIDO FROM DBO.CLIENTES ORDER BY APELLIDO ASC
		END
GO

CREATE PROCEDURE [SP_TRAER_CLIENTE_POR_ID]
	@id_cliente NUMERIC(18,0)
	AS
	BEGIN
		SET NOCOUNT ON;
		SELECT * FROM DBO.CLIENTES
		WHERE ID_CLIENTE = @id_cliente
	END
GO

CREATE PROCEDURE [SP_TRAER_USUARIO_POR_NOMBRE]
	@nombre  NVARCHAR(255)
	AS
	BEGIN
		SET NOCOUNT ON;
		SELECT ID_USUARIO, NOMBRE, CONTRASEÑA FROM DBO.USUARIOS
		WHERE NOMBRE = @nombre
	END
GO

CREATE PROCEDURE [SP_TRAER_CLIENTE_POR_COD]
	@cod_cliente NUMERIC(18,0)
	AS
	BEGIN
		SET NOCOUNT ON;
		SELECT * FROM DBO.CLIENTES
		WHERE COD_CLIENTE = @cod_cliente
	END
GO

CREATE PROCEDURE [SP_TRAER_TODOS_LOS_PENDIENTES]
	AS
	BEGIN
	SET NOCOUNT ON;
		SELECT CLIENTES.APELLIDO, PENDIENTES.CONCEPTO,PENDIENTES.IMPORTE, PENDIENTES.PAGADO
		FROM DBO.PENDIENTES INNER JOIN DBO.CLIENTES 
		ON PENDIENTES.ID_CLIENTE = CLIENTES.ID_CLIENTE
	END
GO

CREATE PROCEDURE [SP_TRAER_PENDIENTES_POR_CLIENTE_ID]
	@id_cliente NUMERIC(18,0),
	@pagado BIT = null
	AS
	BEGIN
	SET NOCOUNT ON;
		SELECT PENDIENTES.ID_PENDIENTE, PENDIENTES.COD_PENDIENTE,CLIENTES.APELLIDO,  PENDIENTES.CONCEPTO, PENDIENTES.PERIODO, PENDIENTES.FECHA, PENDIENTES.DIRECCION, PENDIENTES.IMPORTE, PENDIENTES.PAGADO, PENDIENTES.OBSERVACIONES
		FROM PENDIENTES INNER JOIN CLIENTES 
		ON PENDIENTES.ID_CLIENTE = CLIENTES.ID_CLIENTE
		WHERE CLIENTES.ID_CLIENTE = @id_cliente AND
		 (@pagado IS NULL OR pendientes.pagado = @pagado) 
	END
GO



CREATE PROCEDURE [SP_TRAER_PENDIENTE_POR_CODIGO]
	@cod_pendiente NUMERIC(18,0)
	AS
	BEGIN
	SET NOCOUNT ON;
		SELECT CLIENTES.ID_CLIENTE, (''+CLIENTES.APELLIDO+', '+CLIENTES.NOMBRE) AS APELLIDO, PENDIENTES.ID_PENDIENTE, PENDIENTES.COD_PENDIENTE, PENDIENTES.CONCEPTO, PENDIENTES.PERIODO, PENDIENTES.FECHA, PENDIENTES.DIRECCION, PENDIENTES.IMPORTE, PENDIENTES.PAGADO, PENDIENTES.OBSERVACIONES
		FROM DBO.PENDIENTES INNER JOIN DBO.CLIENTES 
		ON PENDIENTES.ID_CLIENTE = CLIENTES.ID_CLIENTE
		WHERE PENDIENTES.COD_PENDIENTE = @cod_pendiente
	END
GO


CREATE PROCEDURE [SP_ACTUALIZAR_CLIENTE_POR_ID]
	@id_cliente NUMERIC(18,0),
	@nombre NVARCHAR(255) = null,
	@apellido NVARCHAR(255) = null,
	@email NVARCHAR(255) = null,
	@telefono NVARCHAR(255) = null,
	@celular NVARCHAR(255) = null,
	@otro_tel NVARCHAR(255) = null,
	@id_tipo_cliente NUMERIC(18,0) = 1,
	@id_tipo_cuil_cuit NUMERIC(18,0) = 1,
	@dni NVARCHAR(255) NULL,
	@fecha_nacimiento NVARCHAR(255) = null,
	@domicilio_calle NVARCHAR(255) = null,
	@domicilio_altura NVARCHAR(255) = null,
	@domicilio_piso NVARCHAR(255) = null,
	@domicilio_dpto NVARCHAR(255) = null,
	@domicilio_provincia NVARCHAR(255) = null,
	@domicilio_partido NVARCHAR(255) = null,
	@domicilio_localidad NVARCHAR(255) = null,
	@observaciones NVARCHAR(255) = null,
	@modificado_por NUMERIC(18,0) =-1
	AS
	BEGIN
	UPDATE  DBO.CLIENTES
	SET NOMBRE=@nombre, APELLIDO=@apellido, EMAIL=@email, TELEFONO=@telefono, CELULAR=@celular, OTRO_TEL=@otro_tel, ID_TIPO_CLIENTE=@id_tipo_cliente, ID_TIPO_CUIL_CUIT=@id_tipo_cuil_cuit, DNI=@dni, FECHA_NACIMIENTO=@fecha_nacimiento, DOMICILIO_CALLE=@domicilio_calle,DOMICILIO_ALTURA=@domicilio_altura,DOMICILIO_PISO=@domicilio_piso,DOMICILIO_DPTO=@domicilio_dpto,DOMICILIO_PROVINCIA=@domicilio_provincia,DOMICILIO_PARTIDO=@domicilio_partido,DOMICILIO_LOCALIDAD=@domicilio_localidad,OBSERVACIONES=@observaciones, MODIFICADO_POR=@modificado_por
	WHERE ID_CLIENTE=@id_cliente
	END
GO

CREATE PROCEDURE [SP_ACTUALIZAR_PENDIENTE_POR_ID_PENDIENTE]
	@id_pendiente NUMERIC(18,0),
	@concepto NVARCHAR(255) = null,
	@periodo NVARCHAR(255) = null,
	@fecha NVARCHAR(255) = null,
	@direccion NVARCHAR(255) = null,
	@importe [numeric](18, 2) = null,
	@pagado BIT,
	@observaciones NVARCHAR(255) = null,
	@modificado_por NUMERIC(18,0) =-1
	AS
	BEGIN
	UPDATE  PENDIENTES
	SET 
	CONCEPTO= IsNull(@concepto, concepto), 
	PERIODO= IsNull(@periodo, periodo), 
	FECHA= IsNull(@fecha, fecha), 
	DIRECCION= IsNull(@direccion, direccion), 
	IMPORTE= IsNull(@importe, importe),
	PAGADO= IsNull(@pagado, pagado),
	OBSERVACIONES= IsNull(@observaciones, observaciones),
	MODIFICADO_POR= IsNull(@modificado_por,null)
	WHERE  ID_PENDIENTE = @id_pendiente
	END
GO

CREATE PROCEDURE [SP_INSERTAR_PENDIENTE]
	@id_cliente NUMERIC(18,0),
	@concepto NVARCHAR(255) = null,
	@periodo NVARCHAR(255) = null,
	@fecha NVARCHAR(255) = null,
	@direccion NVARCHAR(255) = null,
	@importe [numeric](18, 2) = null,
	@pagado BIT,
	@observaciones NVARCHAR(255) = null,
	@modificado_por NUMERIC(18,0) =-1
		AS
		BEGIN
		SET NOCOUNT ON;
		DECLARE	@cod_pendiente numeric(18,0)
		SET @cod_pendiente= (SELECT COUNT(*) FROM dbo.PENDIENTES)
		INSERT INTO dbo.PENDIENTES(ID_CLIENTE, COD_PENDIENTE, CONCEPTO, PERIODO, FECHA, DIRECCION, IMPORTE, PAGADO, OBSERVACIONES, MODIFICADO_POR)
		VALUES(@id_cliente, @cod_pendiente, @concepto, @periodo, @fecha, @direccion, @importe, @pagado, @observaciones, @modificado_por)
		END
GO



INSERT INTO dbo.TIPO_CLIENTES (DESCRIPCION)
VALUES ('<Vacio>'),('Dueño'),('Inquilino'),('Comprador'),('Vendedor'),('Contacto'),('Escribania');

GO

INSERT INTO dbo.TIPO_CUIL_CUIT (DESCRIPCION)
VALUES ('<CUIL/CUIT>'),('CUIL'),('CUIT');


/*CREACION DE FOREIGN KEYS*/


GO
ALTER TABLE CLIENTES ADD CONSTRAINT FK_TIPO_CLIENTES_CLIENTES_ID_TIPO_CLIENTES
	FOREIGN KEY (ID_TIPO_CLIENTE) REFERENCES dbo.TIPO_CLIENTES(ID_TIPO_CLIENTE)

GO


ALTER TABLE CLIENTES ADD CONSTRAINT FK_TIPO__CUIL_CUIT_TIPO_CUIL_CUIT_ID_TIPO__CUIL_CUIT
	FOREIGN KEY (ID_TIPO_CUIL_CUIT) REFERENCES dbo.TIPO_CUIL_CUIT(ID_TIPO_CUIL_CUIT)

GO


ALTER TABLE PENDIENTES ADD CONSTRAINT FK_ID_CLIENTE_PENDIENTES_ID_CLIENTE
	FOREIGN KEY (ID_CLIENTE) REFERENCES dbo.CLIENTES(ID_CLIENTE)

GO

ALTER TABLE PROPIETARIO_POR_INMUEBLE ADD CONSTRAINT FK_ID_PROPIETARIO_PROPIETARIO_POR_INMUEBLE_ID_PROPIETARIO
	FOREIGN KEY (ID_PROPIETARIO) REFERENCES dbo.CLIENTES(ID_CLIENTE)

GO

ALTER TABLE PROPIETARIO_POR_INMUEBLE ADD CONSTRAINT FK_ID_INMUEBLE_PROPIETARIO_POR_INMUEBLE_ID_INMUEBLE
	FOREIGN KEY (ID_INMUEBLE) REFERENCES dbo.INMUEBLES(ID_INMUEBLE)

GO

/*CREACION DE TRIGGERS*/

CREATE TRIGGER UPDATE_ULTIMA_MODIFICACION_CLIENTES ON dbo.CLIENTES AFTER INSERT, UPDATE 
AS
   UPDATE dbo.CLIENTES  
   SET ULTIMA_MODIFICACION = SYSDATETIME() FROM Inserted i
   WHERE dbo.CLIENTES.ID_CLIENTE = i.ID_CLIENTE
GO
CREATE TRIGGER UPDATE_ULTIMA_MODIFICACION_USUARIOS ON dbo.USUARIOS AFTER INSERT, UPDATE 
AS
   UPDATE dbo.USUARIOS  
   SET ULTIMA_MODIFICACION = SYSDATETIME() FROM Inserted i
   WHERE dbo.USUARIOS.ID_USUARIO = i.ID_USUARIO
GO
CREATE TRIGGER UPDATE_ULTIMA_MODIFICACION_INMUEBLES ON dbo.INMUEBLES AFTER INSERT, UPDATE 
AS
   UPDATE dbo.INMUEBLES  
   SET ULTIMA_MODIFICACION = SYSDATETIME() FROM Inserted i
   WHERE dbo.INMUEBLES.ID_INMUEBLE = i.ID_INMUEBLE
GO
CREATE TRIGGER UPDATE_ULTIMA_MODIFICACION_PENDIENTES ON dbo.PENDIENTES AFTER INSERT, UPDATE 
AS
   UPDATE dbo.PENDIENTES  
   SET ULTIMA_MODIFICACION = SYSDATETIME() FROM Inserted i
   WHERE dbo.PENDIENTES.ID_PENDIENTE = i.ID_PENDIENTE
GO
CREATE TRIGGER UPDATE_ULTIMA_MODIFICACION_PROPIETARIO_POR_INMUEBLE ON dbo.PROPIETARIO_POR_INMUEBLE AFTER INSERT, UPDATE 
AS
   UPDATE dbo.PROPIETARIO_POR_INMUEBLE
   SET ULTIMA_MODIFICACION = SYSDATETIME() FROM Inserted i
   WHERE dbo.PROPIETARIO_POR_INMUEBLE.ID_PROPIETARIO_POR_INMUEBLE = i.ID_PROPIETARIO_POR_INMUEBLE
GO




select usuarios.nombre, CLIENTES.ULTIMA_MODIFICACION from CLIENTES inner join USUARIOS on USUARIOS.ID_USUARIO=CLIENTES.modificado_por
select usuarios.nombre, INMUEBLES.ULTIMA_MODIFICACION from INMUEBLES inner join USUARIOS on USUARIOS.ID_USUARIO=INMUEBLES.modificado_por



 


/*
ALTER TABLE CLIENTES DROP CONSTRAINT FK_TIPO_CLIENTES_CLIENTES_ID_TIPO_CLIENTES
GO
ALTER TABLE CLIENTES DROP CONSTRAINT FK_TIPO__CUIL_CUIT_TIPO_CUIL_CUIT_ID_TIPO__CUIL_CUIT
GO
ALTER TABLE PENDIENTES DROP CONSTRAINT  FK_ID_CLIENTE_PENDIENTES_ID_CLIENTE
GO
ALTER TABLE PROPIETARIO_POR_INMUEBLE DROP CONSTRAINT FK_ID_PROPIETARIO_PROPIETARIO_POR_INMUEBLE_ID_PROPIETARIO
GO
ALTER TABLE PROPIETARIO_POR_INMUEBLE DROP CONSTRAINT FK_ID_INMUEBLE_PROPIETARIO_POR_INMUEBLE_ID_INMUEBLE
GO
DROP TRIGGER UPDATE_ULTIMA_MODIFICACION
GO
DROP TRIGGER UPDATE_ULTIMA_MODIFICACION_CLIENTES
GO
DROP TRIGGER UPDATE_ULTIMA_MODIFICACION_INMUEBLES
go
DROP TRIGGER UPDATE_ULTIMA_MODIFICACION_PENDIENTES
GO
DROP TRIGGER UPDATE_ULTIMA_MODIFICACION_PROPIETARIO_POR_INMUEBLE
GO
DROP TABLE [PENDIENTES]
GO
DROP TABLE  [CLIENTES]
GO
DROP TABLE  [TIPO_CLIENTES]
GO
DROP TABLE  [TIPO_CUIL_CUIT]
GO
DROP TABLE  [INMUEBLES]
GO
DROP TABLE [PROPIETARIO_POR_INMUEBLE]
GO
drop TABLE [USUARIOS]
GO
DROP PROCEDURE [SP_INSERTAR_CLIENTE]
GO
DROP PROCEDURE [SP_INSERTAR_PENDIENTE]
GO
DROP PROCEDURE [SP_TRAER_TIPO_CLIENTES]
GO
DROP PROCEDURE [SP_TRAER_TIPO_CUIL_CUIT]
GO
DROP PROCEDURE [SP_TRAER_CLIENTES_CODIGO_APELLIDO_Y_NOMBRE]
GO
DROP PROCEDURE [SP_TRAER_PROVINCIAS]
GO
DROP PROCEDURE [SP_TRAER_DEPARTAMENTOS_POR_PROVINCIA]
GO
DROP PROCEDURE [SP_TRAER_CLIENTES]
GO
DROP PROCEDURE [SP_TRAER_CLIENTE_POR_ID]
GO
DROP PROCEDURE [SP_ACTUALIZAR_CLIENTE_POR_ID]
GO
DROP PROCEDURE [SP_TRAER_CLIENTE_POR_COD]
GO
DROP PROCEDURE [SP_TRAER_CLIENTES_APELLIDO_Y_NOMBRE]
GO
DROP PROCEDURE [SP_TRAER_TODOS_LOS_PENDIENTES]
GO
DROP PROCEDURE [SP_TRAER_PENDIENTES_POR_CLIENTE_ID]
GO
DROP PROCEDURE [SP_TRAER_PENDIENTES_CODIGO]
GO
DROP PROCEDURE [SP_ACTUALIZAR_PENDIENTE_POR_ID_PENDIENTE]
go
DROP PROCEDURE [SP_INSERTAR_INMUEBLE]
GO
DROP PROCEDURE [SP_INSERTAR_USUARIO]
GO
DROP PROCEDURE [SP_TRAER_USUARIO_POR_NOMBRE]

*/






USE master
SELECT * FROM DBO.INMUEBLES
drop table TIPO_CLIENTES

DELETE FROM DBO.CLIENTES
WHERE ID_CLIENTE=1


EXECUTE SP_TRAER_PENDIENTE_POR_CODIGO 4

select INMUEBLES.TIPO, PROPIETARIO_POR_INMUEBLE.ID_PROPIETARIO_POR_INMUEBLE,CLIENTES.NOMBRE, CLIENTES.APELLIDO, CLIENTES.ID_CLIENTE FROM INMUEBLES
inner join PROPIETARIO_POR_INMUEBLE on PROPIETARIO_POR_INMUEBLE.ID_INMUEBLE = INMUEBLES.ID_INMUEBLE
inner join CLIENTES on PROPIETARIO_POR_INMUEBLE.ID_PROPIETARIO = CLIENTES.ID_CLIENTE

select * from PENDIENTES



		isnull((SELECT ID_USUARIO, NOMBRE, CONTRASEÑA FROM DBO.USUARIOS
		WHERE NOMBRE = 'b'),'a')
delete from USUARIOS

select * from clientes
SELECT CLIENTES.APELLIDO, PENDIENTES.CONCEPTO,PENDIENTES.IMPORTE, PENDIENTES.PAGADO FROM PENDIENTES INNER JOIN CLIENTES ON PENDIENTES.ID_CLIENTE = CLIENTES.ID_CLIENTE